### 데이터 파악하기
str(adu) # 15개의 변수 중 반 이상이 factor 형임 => glm 이용
hist(adu$`capital-gain`)
hist(adu$`capital-loss`)
hist(adu$`hours-per-week`)
# age : int => factor => 0/1
age = ifelse(adu$age<=39,"청장년층","중노년층") # 청장년층 / 중노년층
adu$age = factor(age,levels=c("중노년층","청장년층"))
# education-num : factor => 0/1
edunum = ifelse(adu$`education-num`<=9,"고졸","고졸이상") # 고졸 / 고졸이상
adu$`education-num` = factor(edunum, levels=c("고졸","고졸이상"))
# marital-status : factor => 0/1
plot(adu$marital,adu$income) # married-civ-spouse 과 아닌것의 차이가 큼
marital = ifelse(adu$`marital-status`=="Married-civ-spouse","Married-civ-spouse O","Married-civ-spouse X") # "Married-civ-spouse O" / "Married-civ-spouse X"
adu$`marital-status` = factor(marital, levels=c("Married-civ-spouse X","Married-civ-spouse O"))
table(adu$`marital-status`)
# occupation : factor => 0/1
# 소득을 기준으로 임의로 나눔
occupation = character(0)
occupation[adu$occupation %in% c("Exec-managerial","Craft-repair","Prof-speciality","Sales","Tech-support","Protective-serv")]="고소득직종"
occupation[is.na(occupation)]="저소득직종"
adu$occupation = factor(occupation, levels=c("저소득직종","고소득직종"))
# relationship : factor => 0/1
relationship = character(0)
relationship[adu$relationship %in% c("Husband","Wife")]="배우자 O" # 배우자가 있는경우 / 없는경우
relationship[is.na(relationship)]="배우자 X"
adu$relationship = factor(relationship,levels=c("배우자 X","배우자 O"))
table(adu$relationship)
# race : factor
race = ifelse(adu$race=="White","백인","백인X") # 백인인경우 / 아닌경우
adu$race = factor(race, levels=c("백인x","백인"))
# sex
plot(adu$sex, adu$income)
sex = ifelse(adu$sex=="Male","남","여")
adu$sex = factor(sex, levels=c("여","남"))
# capitalgain
gain = ifelse(adu$`capital-gain`==0,"무","유") # capital이 있는경우/ 없는경우
adu$`capital-gain` = factor(gain, levels=c("무","유"))
# capitalloss
loss = ifelse(adu$`capital-loss`==0,"무","유")
adu$`capital-loss` = factor(loss, levels=c("무","유"))
# hours-per-week
summary(adu$`hours-per-week`)
hist(adu$`hours-per-week`)
table(adu$`hours-per-week`)
hours = c()
hours[adu$`hours-per-week`<=39]="40시간 미만"
hours[adu$`hours-per-week`>39 & adu$`hours-per-week`<45]="40시간 이상 45시간 미만"
hours[adu$`hours-per-week`>=45]="45시간 이상"
adu$`hours-per-week` = factor(hours, levels=c("40시간 미만","40시간 이상 45시간 미만","45시간 이상"))
# transaction 데이터 만들기
library(arules)
library(arulesViz)
str(adu)
adu = as(adu, 'transactions')
# 연관성분석
adu_rule1 = apriori(adu, parameter=list(support=0.01,confidence=0.2,minlen=3,maxlen=11))
summary(adu_rule1)
adu_rule2 = apriori(adu, parameter=list(support=0.05,confidence=0.2,minlen=3,maxlen=11))
summary(adu_rule2)
# 연관규칙평가
rule_large = subset(adu_rule2, rhs %pin% c("income=large"))
large_bylift = inspect(sort(rule_large[1:20]),by="lift")
large_bysupport = inspect(sort(rule_large[1:20]),by="support")
## age=중노년층, hours 45시간 이상 정도가 많이 나옴을 확인
rule_large2 = subset(rule_large, rhs %in% c("age=중노년층","hours-per-week=45시간 이상"))
rule_large2
rule_large2 = subset(rule_large, rhs %pin% c("age=중노년층","hours-per-week=45시간 이상"))
rule_large2 = subset(rule_large, rhs %ain% c("age=중노년층","hours-per-week=45시간 이상"))
rule_large2
rule_large2 = subset(rule_large, rhs %in% c("age=중노년층","hours-per-week=45시간 이상"))
rule_large2
rule_large = subset(adu_rule2, rhs %pin% c("income=large"))
rule_large
rule_large2
rule_large2 = subset(rule_large, rhs %in% c("age=중노년층","hours-per-week=45시간 이상"))
rule_large2
rule_large = subset(adu_rule2, rhs %pin% c("income=large"))
large_bylift = inspect(sort(rule_large[1:20]),by="lift")
rule_large2 = subset(rule_large, lhs %ain% c("age=중노년층","hours-per-week=45시간 이상"))
rule_large2
large2_bylift = inspect(sort(rule_large2[1:20]),by="lift")
table(large2_bylift$lhs)
large2_bylift = inspect(sort(rule_large2),by="lift")
rule_small = subset(adu_rule2, rhs %pin% c("income=small"))
small_bylift = inspect(sort(rule_small[1:20]),by="lift")
small_bysupport = inspect(sort(rule_small[1:20]),by="support")
rule_small2 = subset(rule_small, lhs %ain% c("hours-per-week=40시간 미만"))
rule_small2 = subset(rule_small, lhs %pin% c("hours-per-week=40시간 미만"))
small2_bylift = inspect(sort(rule_small2),by="lift")
small_bysupport = inspect(sort(rule_small[1:20]),by="support")
small2_bylift = inspect(sort(rule_small2[1:20]),by="lift")
rule_small2 = subset(rule_small, lhs %not in% c("hours-per-week=40시간 미만"))
rule_small2 = subset(rule_small, lhs %in% !c("hours-per-week=40시간 미만"))
rule_small2 = subset(rule_small, lhs %in% c(-"hours-per-week=40시간 미만"))
rule_small2 = subset(rule_small, lhs %in% c("hours-per-week=40시간 미만"))
rule_small = subset(adu_rule2, rhs %pin% c("income=small"))
rule_small2 = subset(rule_small, lhs %in% c("hours-per-week=40시간 미만"))
rule_small2
ule_small3
rule_small3 = subset(rule_small2, lhs %in% c("sex=여"))
rule_small3
rule_small3 = subset(rule_small2, lhs %in% c("education-num=고졸"))
rule_small3
rule_small3 = subset(rule_small2, lhs %in% c("age=청장년층"))
rule_small3
small2_bylift = inspect(sort(rule_small3[1:20]),by="lift")
rule_small3 = subset(rule_small2, lhs %in% c("age=청장년층","sex=여"))
rule_small3
rule_small3 = subset(rule_small2, lhs %ain% c("age=청장년층","sex=여"))
rule_small3
small2_bylift = inspect(sort(rule_small3[1:20]),by="lift")
small2_bylift = inspect(sort(rule_small3),by="lift")
itemFrequencyPlot(adu, support=0.05)
par(mfrow=c(1,1))
itemFrequencyPlot(adu, support=0.05)
large2_bylift = inspect(sort(rule_large2),by="lift") ## race=백인, capital-loss=무, sex=남 이 많이 나옴을 확인
small2_bylift = inspect(sort(rule_small3),by="lift")
rm(list=ls())
library(arules)
data("AdultUCI")
adu <- AdultUCI
adu = na.omit(adu)
attach(adu)
names(adu)
adu = adu[,c(-2,-3,-4,-14)]
head(adu)
### 데이터 파악하기
str(adu) # 15개의 변수 중 반 이상이 factor 형임 => glm 이용
hist(adu$`capital-gain`)
hist(adu$`capital-loss`)
hist(adu$`hours-per-week`)
# age : int => factor => 0/1
age = ifelse(adu$age<=39,1,0) # 청장년층 / 중노년층
adu$age = factor(age,order=T)
# education-num : factor => 0/1
edunum = ifelse(adu$`education-num`<=9,0,1) # 고졸 / 고졸이상
adu$`education-num` = factor(edunum, order=T)
# marital-status : factor => 0/1
plot(adu$marital,adu$income) # married-civ-spouse 과 아닌것의 차이가 큼
marital = ifelse(adu$`marital-status`=="Married-civ-spouse",1,0) # "Married-civ-spouse O" / "Married-civ-spouse X"
adu$`marital-status` = factor(marital, order=T)
table(adu$`marital-status`)
# occupation : factor => 0/1
# 소득을 기준으로 임의로 나눔
occupation = character(0)
occupation[adu$occupation %in% c("Exec-managerial","Craft-repair","Prof-speciality","Sales","Tech-support","Protective-serv")]=1
occupation[is.na(occupation)]=0
adu$occupation = factor(occupation, order=T)
# relationship : factor => 0/1
relationship = character(0)
relationship[adu$relationship %in% c("Husband","Wife")]=1 # 배우자가 있는경우 / 없는경우
relationship[is.na(relationship)]=0
adu$relationship = factor(relationship,order=T)
table(adu$relationship)
# race : factor
race = ifelse(adu$race=="White",1,0) # 백인인경우 / 아닌경우
adu$race = factor(race, order=T)
# sex
plot(adu$sex, adu$income)
sex = ifelse(adu$sex=="Male",1,0)
adu$sex = factor(sex, order=T)
# capitalgain
gain = ifelse(adu$`capital-gain`==0,0,1) # capital이 있는경우/ 없는경우
adu$`capital-gain` = factor(gain, order=T)
# capitalloss
loss = ifelse(adu$`capital-loss`==0,0,1)
adu$`capital-loss` = factor(loss, order=T)
# hours-per-week
summary(adu$`hours-per-week`)
hist(adu$`hours-per-week`)
table(adu$`hours-per-week`)
hours = c()
hours[adu$`hours-per-week`<=39]="40시간 미만"
hours[adu$`hours-per-week`>39 & adu$`hours-per-week`<45]="40시간 이상 45시간 미만"
hours[adu$`hours-per-week`>=45]="45시간 이상"
adu$`hours-per-week` = factor(hours, levels=c("40시간 미만","40시간 이상 45시간 미만","45시간 이상"))
library(pROC)
par(mfrow=c(1,2))
y = roc(income ~ age+`education-num`+`marital-status`+occupation+race+sex+`capital-gain`+`capital-loss`+`hours-per-week`, data=adu1, plot=T)
adu1 = adu[,-5]
y = roc(income ~ age+`education-num`+`marital-status`+occupation+race+sex+`capital-gain`+`capital-loss`+`hours-per-week`, data=adu1, plot=T)
y = roc(income ~ age+`education-num`+`marital-status`+occupation+race+sex+`capital-gain`+`capital-loss`+`hours-per-week`, data=adu, plot=T)
y = roc(income ~ age+`education-num`+`marital-status`+occupation+race+sex+`capital-gain`+`capital-loss`, data=adu, plot=T)
hours = matrix(0,
nrow(adu),2)
for(i in 1:nrow(adu)){
if(adu[i,10]=="40시간 이상 45시간 미만"){hours[i,1]=1}
else if(adu[i,10]=="45시간 이상"){hours[i,2]=1}
else{}
}
factor = ifelse(hours[,1]==1,0,1)
adu[,10]=factor(factor,order=T)
y = roc(income ~ age+`education-num`+`marital-status`+occupation+race+sex+`capital-gain`+`capital-loss`+`hours-per-week`, data=adu, plot=T)
str(adu)
rm(list=ls())
library(arules)
data("AdultUCI")
adu <- AdultUCI
adu = na.omit(adu)
# 결측치 제거하니까 18000개가 없어졌는데 제거말고 다르게 하는 방법?
attach(adu)
names(adu)
adu = adu[,c(-2,-3,-4,-14)]
head(adu)
### 데이터 파악하기
str(adu) # 15개의 변수 중 반 이상이 factor 형임 => glm 이용
hist(adu$`capital-gain`)
hist(adu$`capital-loss`)
hist(adu$`hours-per-week`)
# age : int => factor => 0/1
age = ifelse(adu$age<=39,"청장년층","중노년층") # 청장년층 / 중노년층
adu$age = factor(age,levels=c("중노년층","청장년층"))
# education-num : factor => 0/1
edunum = ifelse(adu$`education-num`<=9,"고졸","고졸이상") # 고졸 / 고졸이상
adu$`education-num` = factor(edunum, levels=c("고졸","고졸이상"))
# marital-status : factor => 0/1
plot(adu$marital,adu$income) # married-civ-spouse 과 아닌것의 차이가 큼
marital = ifelse(adu$`marital-status`=="Married-civ-spouse","Married-civ-spouse O","Married-civ-spouse X") # "Married-civ-spouse O" / "Married-civ-spouse X"
adu$`marital-status` = factor(marital, levels=c("Married-civ-spouse X","Married-civ-spouse O"))
table(adu$`marital-status`)
# occupation : factor => 0/1
# 소득을 기준으로 임의로 나눔
occupation = character(0)
occupation[adu$occupation %in% c("Exec-managerial","Craft-repair","Prof-speciality","Sales","Tech-support","Protective-serv")]="고소득직종"
occupation[is.na(occupation)]="저소득직종"
adu$occupation = factor(occupation, levels=c("저소득직종","고소득직종"))
# relationship : factor => 0/1
relationship = character(0)
relationship[adu$relationship %in% c("Husband","Wife")]="배우자 O" # 배우자가 있는경우 / 없는경우
relationship[is.na(relationship)]="배우자 X"
adu$relationship = factor(relationship,levels=c("배우자 X","배우자 O"))
table(adu$relationship)
# race : factor
race = ifelse(adu$race=="White","백인","백인X") # 백인인경우 / 아닌경우
adu$race = factor(race, levels=c("백인x","백인"))
# sex
plot(adu$sex, adu$income)
sex = ifelse(adu$sex=="Male","남","여")
adu$sex = factor(sex, levels=c("여","남"))
# capitalgain
gain = ifelse(adu$`capital-gain`==0,"무","유") # capital이 있는경우/ 없는경우
adu$`capital-gain` = factor(gain, levels=c("무","유"))
# capitalloss
loss = ifelse(adu$`capital-loss`==0,"무","유")
adu$`capital-loss` = factor(loss, levels=c("무","유"))
# hours-per-week
summary(adu$`hours-per-week`)
hist(adu$`hours-per-week`)
table(adu$`hours-per-week`)
hours = c()
hours[adu$`hours-per-week`<=39]="40시간 미만"
hours[adu$`hours-per-week`>39 & adu$`hours-per-week`<45]="40시간 이상 45시간 미만"
hours[adu$`hours-per-week`>=45]="45시간 이상"
adu$`hours-per-week` = factor(hours, levels=c("40시간 미만","40시간 이상 45시간 미만","45시간 이상"))
par(mfrow=c(1,2))
y = roc(income ~ age+`education-num`+`marital-status`+occupation+race+sex+`capital-gain`+`capital-loss`+`hours-per-week`, data=adu, plot=T)
y = roc(income ~ age+`education-num`+`marital-status`+occupation+race+sex+`capital-gain`+`capital-loss`, data=adu, plot=T)
y = roc(income ~ age+`education-num`+`marital-status`+occupation+race+`capital-gain`+`capital-loss`+`hours-per-week`, data=adu, plot=T)
rm(list=ls())
rm(list=ls())
library(arules)
data("AdultUCI")
adu <- AdultUCI
adu = na.omit(adu)
attach(adu)
names(adu)
adu = adu[,c(-2,-3,-4,-14)]
head(adu)
### 데이터 파악하기
str(adu) # 15개의 변수 중 반 이상이 factor 형임 => glm 이용
hist(adu$`capital-gain`)
hist(adu$`capital-loss`)
hist(adu$`hours-per-week`)
# age : int => factor => 0/1
age = ifelse(adu$age<=39,1,0) # 청장년층 / 중노년층
adu$age = factor(age,order=T)
# education-num : factor => 0/1
edunum = ifelse(adu$`education-num`<=9,0,1) # 고졸 / 고졸이상
adu$`education-num` = factor(edunum, order=T)
# marital-status : factor => 0/1
plot(adu$marital,adu$income) # married-civ-spouse 과 아닌것의 차이가 큼
marital = ifelse(adu$`marital-status`=="Married-civ-spouse",1,0) # "Married-civ-spouse O" / "Married-civ-spouse X"
adu$`marital-status` = factor(marital, order=T)
table(adu$`marital-status`)
# occupation : factor => 0/1
# 소득을 기준으로 임의로 나눔
occupation = character(0)
occupation[adu$occupation %in% c("Exec-managerial","Craft-repair","Prof-speciality","Sales","Tech-support","Protective-serv")]=1
occupation[is.na(occupation)]=0
adu$occupation = factor(occupation, order=T)
# relationship : factor => 0/1
relationship = character(0)
relationship[adu$relationship %in% c("Husband","Wife")]=1 # 배우자가 있는경우 / 없는경우
relationship[is.na(relationship)]=0
adu$relationship = factor(relationship,order=T)
table(adu$relationship)
# race : factor
race = ifelse(adu$race=="White",1,0) # 백인인경우 / 아닌경우
adu$race = factor(race, order=T)
# sex
plot(adu$sex, adu$income)
sex = ifelse(adu$sex=="Male",1,0)
adu$sex = factor(sex, order=T)
# capitalgain
gain = ifelse(adu$`capital-gain`==0,0,1) # capital이 있는경우/ 없는경우
adu$`capital-gain` = factor(gain, order=T)
# capitalloss
loss = ifelse(adu$`capital-loss`==0,0,1)
adu$`capital-loss` = factor(loss, order=T)
# hours-per-week
summary(adu$`hours-per-week`)
hist(adu$`hours-per-week`)
table(adu$`hours-per-week`)
hours = c()
hours[adu$`hours-per-week`<=39]="40시간 미만"
hours[adu$`hours-per-week`>39 & adu$`hours-per-week`<45]="40시간 이상 45시간 미만"
hours[adu$`hours-per-week`>=45]="45시간 이상"
adu$`hours-per-week` = factor(hours, levels=c("40시간 미만","40시간 이상 45시간 미만","45시간 이상"))
# income
income = ifelse(adu$income=="small",0,1)
adu$income = factor(income, order=T)
str(adu)
y = roc(income ~ age+`education-num`+`marital-status`+occupation+race+`capital-gain`+`capital-loss`+`hours-per-week`, data=adu, plot=T)
y = roc(income ~ age+`education-num`+`marital-status`+occupation+race+`capital-gain`+`capital-loss`, data=adu, plot=T)
y = roc(income ~ age+`education-num`, data=adu, plot=T)
y = roc(income ~ age+, data=adu, plot=T)
y = roc(income ~ age, data=adu, plot=T)
y = roc(income ~ age+`education-num`, data=adu, plot=T)
y = roc(income ~ age+`hours-per-week`, data=adu, plot=T)
y = roc(income ~ age+`hours-per-week`, data=adu1, plot=T)
adu1 = adu[,-5]
fit2 = glm(income~.,data=adu1, family=binomial(link='logit'))
summary(fit2)
vif(fit2) # 다중공선성 해결됐음을 확인
y = roc(income ~ age+`hours-per-week`, data=adu1, plot=T)
y = roc(income ~ age+`education-num`+`marital-status`+occupation+sex+race+`capital-gain`+`capital-loss`+`hours-per-week`, data=adu, plot=T)
adu2 = adu[,-10]
adu2
y = roc(income ~ age+`education-num`+`marital-status`+occupation+sex+race+`capital-gain`+`capital-loss`, data=adu2, plot=T)
rm(list=ls())
library(arules)
data("AdultUCI")
adu <- AdultUCI
adu = na.omit(adu)
attach(adu)
names(adu)
plot(adu)
head(adu)
str(adu) # 15개의 변수 중 반 이상이 factor 형임 => glm 이용
adu = na.omit(adu) # 결측치 제거
attach(adu)
names(adu)
head(adu)
str(adu) # 15개의 변수 중 반 이상이 factor 형임 => glm 이용
plot(adu,income)
names(adu)
install.packages("stringr")
readLines("http://www.ediya.com/board/listing/brd/store")
cont=readLines("http://www.ediya.com/board/listing/brd/store")
cont=readLines("http://www.ediya.com/board/listing/brd/store",encoding="UTF-8")
cont
library("stringr")
str_detect(cont,"<td class=\"left\">")
which(str_detect(cont,"<td class=\"left\">)==TRUE)
)
which(str_detect(cont,"<td class=\"left\">")==TRUE)
index = which(str_detect(cont,"<td class=\"left\">")==TRUE)
cont[index]
cont[index-2]
loca = cont[index-2]
branch = cont[index-1]
add = cont[index]
loca = cont[index+2]
loca = cont[index-2]
branch = cont[index-1]
add = cont[index]
num = cont[index+2]
num
loca
gsub(" ","",loca) # gsub(현재문자,교체문자,대상문자열)
loca=gsub(" ","",loca) # gsub(현재문자,교체문자,대상문자열)
str_trim(loca)
loca = str_trim(loca) # gsub에서 안지워졌던 \t까지 지워짐
gsub("<.*?>","",loca)
loca = gsub("<.*?>","",loca)
whitespace(loca)
whiteSpace<-function(str){
temp<-str_trim(str)
eval.parent(substitute(str<-temp))
}
whitespace(loca)
whitespace(branch)
whitespace(add)
whitespace(num)
whiteSpace(loca)
whiteSpace(branch)
whiteSpace(add)
whiteSpace(num)
removeSpecialText<-function(str){
temp<-gsub("<.*?>","",str)
eval.parent(substitute(str<-temp))
}
removeSpecialText(loca)
removeSpecialText(branch)
removeSpecialText(add)
removeSpecialText(num)
removeSpecialText(add)
cbind(loca,branch,add,num)
setwd("")
setwd("C:/Users/USER/Desktop/투빅스/3주차 crawling")
write.csv(rusult,file="test.csv")
write.csv(result,file="test.csv")
result = cbind(loca,branch,add,num)
write.csv(result,file="test.csv")
paste0(url,1:203)
url = "http://www.ediya.com/board/listing/brd/store/page/"
paste0(url,1:203)
url = paste0(url,1:203)
result = NULL
for(i in 1:length(url)){
cont = readLines(url[i],encoding="UTF-8")
index = which(str_detect(cont,"<td class=\"left\">")==TRUE)
loca = cont[index-2]
branch = cont[index-1]
add = cont[index]
num = cont[index+2] # \t는 tab \n은 엔터
whiteSpace(loca)
whiteSpace(branch)
whiteSpace(add)
whiteSpace(num)
removeSpecialText(loca)
removeSpecialText(branch)
removeSpecialText(add)
removeSpecialText(num)
temp = cbind(loca,branch,add,num)
result = rbind(result,temp)
}
cont = readLines("http://news.jtbc.joins.com/section/list.aspx?pdate=20170731&scode=10©right=&pgi=1",encoding = "UTF-8")
which(str_detect(cont,"<dt class=\"title_cr\">")==TRUE)
cont[index-1]
cont[index+1]
cont = readLines("http://news.jtbc.joins.com/section/index.aspx?scode=10",encoding = "UTF-8")
index = which(str_detect(cont,"<dt class=\"title_cr\">")==TRUE)
cont[index+1]
url = gsub("<a href=\"","",url)
url
url = str_trim(url)
url = gsub("<a href=\"","",url)
url
cont = readLines("http://news.jtbc.joins.com/section/index.aspx?scode=10",encoding = "UTF-8")
index = which(str_detect(cont,"<dt class=\"title_cr\">")==TRUE)
url = cont[index+1]
url
url = str_trim(url)
url
url
url = gsub("<a href=\"","",url)
url
url = gsub("</a>","",url)
url = str_split(url,"\">")
url
unlist(url)
sub_url = url[seq(1,40,2)] # start,end,step
sub_url
url = unlist(url)
sub_url = url[seq(1,40,2)] # start,end,step
sub_url
paste0("http://news.jtbc.joins.com",sub_url)
sub_cont = readLines(sub_url[1],encoding = "UTF-8")
sub_url = paste0("http://news.jtbc.joins.com",sub_url)
sub_url
sub_url[1]
sub_cont = readLines(sub_url[1],encoding = "UTF-8")
index = which(str_detect(sub_cont, "itemprop=\"articleBody\"")==TRUE)
url = sub_cont[incex+1]
index = which(str_detect(sub_cont, "itemprop=\"articleBody\"")==TRUE)
url = sub_cont[incex+1]
url = sub_cont[index+1]
url
url = str_trim(url)
url
url = gsub("<br /><br />","",url)
url
url = gsub("<.*?>","",url)
url
date_index = which(str_detect(sub_cont, "<span class=\"i_date\">")==TRUE)
date_index
sub_url = url[seq(1,40,2)] # start,end,step
sub_url = paste0("http://news.jtbc.joins.com",sub_url)
sub_cont = readLines(sub_url[1],encoding = "UTF-8")
sub_url
cont = readLines("http://news.jtbc.joins.com/section/index.aspx?scode=10",encoding = "UTF-8")
index = which(str_detect(cont,"<dt class=\"title_cr\">")==TRUE)
url = cont[index+1]
url = str_trim(url)
url = gsub("<a href=\"","",url)
url = gsub("</a>","",url)
url = str_split(url,"\">")
url = unlist(url)
sub_url = url[seq(1,40,2)] # start,end,step
sub_url = paste0("http://news.jtbc.joins.com",sub_url)
sub_url[1]
sub_cont = readLines(sub_url[1],encoding = "UTF-8")
date_index = which(str_detect(sub_cont, "<span class=\"i_date\">")==TRUE)
date_index
sub_cont
date = sub_cont[date_index]
date
date = str_trim(date)
date = gsub("<.*?>","",date) # <> 안의 속성값 전부 지우기
date
